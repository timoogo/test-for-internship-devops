# This is a basic workflow to help you get started with Actions
name: AKS Deployment

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: "Set NameSpace"
        id: set_namespace
        run: |
          case ${{ github.actor }} in 
            "PMathieu16")
              echo "::set-output name=namespace::workspace-mathieu-2001"
              ;;
            "timoogo")
              echo "::set-output name=namespace::workspace-timothee-1999"
              ;;
          esac

      - name: "Set Trigram"
        id: set_trigram
        run: |
          case ${{ github.actor }} in 
            "PMathieu16")
              echo "::set-output name=trigram::mp"
              ;;
            "timoogo")
              echo "::set-output name=trigram::tg"
              ;;
          esac

      - name: "Az CLI login"
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Run checkout"
        uses: actions/checkout@v2

      - name: "Set up Azure CLI"
        run: |
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          az aks get-credentials --resource-group azure-tp_group --name azure-tp --overwrite-existing

      - name: "Build and push Docker image"
        run: |
          IMAGE_NAME=devmptg.azurecr.io/${{ env.TRIGRAM }}-devops-app

          docker build -t $IMAGE_NAME:${{ github.sha }} .
          docker tag $IMAGE_NAME:${{ github.sha }} $IMAGE_NAME:latest
          az acr login --name devmptg 
          docker push $IMAGE_NAME:${{ github.sha }}
          docker push $IMAGE_NAME:latest
        env:
          TRIGRAM: ${{ steps.set_trigram.outputs.trigram }}

      - name: "Deploy to AKS"
        run: |
          sed -i 's/trigram/${{ env.TRIGRAM }}/g' deployment.yaml
          sed -i 's/latest/${{ github.sha }}/g' deployment.yaml
          kubectl apply -f deployment.yaml -n ${{ env.NAMESPACE }}
          kubectl apply -f service.yaml -n ${{ env.NAMESPACE }}
        env:
          TRIGRAM: ${{ steps.set_trigram.outputs.trigram }}
          NAMESPACE: ${{ steps.set_namespace.outputs.namespace }}
